version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  php:
    container_name: ${COMPOSE_PROJECT_NAME}-php
    image: demo-sf/php
    build:
      context: .
      dockerfile: ./php/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - sql
    networks:
      - backend
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  sql:
    container_name: ${COMPOSE_PROJECT_NAME}-sql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - "MYSQL_ROOT_PASSWORD=${SQL_PASSWORD}"
      - "MYSQL_DATABASE=${SQL_DATABASE}"
      - "MYSQL_USER=${SQL_USERNAME}"
      - "MYSQL_PASSWORD=${SQL_PASSWORD}"
    restart: always
    networks:
      - backend
    volumes:
      - mysql:/var/lib/mysql

  web:
    container_name: ${COMPOSE_PROJECT_NAME}-web
    image: demo-sf/web
    build:
      context: .
      dockerfile: ./web/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
    depends_on:
      - php
    networks:
      backend:
        aliases:
          - ${APP_HOST}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

volumes:
  mysql: